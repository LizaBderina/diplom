// src/services/telegramService.js

/**
 * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Telegram —á–µ—Ä–µ–∑ –±–æ—Ç–∞
 * @param {string} phone - –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∫–ª–∏–µ–Ω—Ç–∞
 * @returns {Promise<object>} - –†–µ–∑—É–ª—å—Ç–∞—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è
 */
export const sendCallbackRequest = async (phone) => {
  try {
    // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞ –∏ —á–∞—Ç–∞
    const botToken = '7711196040:AAF3aNxpZEY_B2BOOFj4DT1qWqEqelI77xc';
    
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º ID –≥—Ä—É–ø–ø—ã "Ddd"
    const chatId = '-4779788458';
    
    // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    const text = `üîî –ù–æ–≤—ã–π –∑–∞–∫–∞–∑ –∑–≤–æ–Ω–∫–∞!\nüì± –¢–µ–ª–µ—Ñ–æ–Ω: ${phone}\nüìÖ –î–∞—Ç–∞: ${new Date().toLocaleString('ru-RU')}`;
    
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º CORS-–ø—Ä–æ–∫—Å–∏ –¥–ª—è –æ–±—Ö–æ–¥–∞ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π
    const corsProxy = 'https://cors-anywhere.herokuapp.com/';
    const telegramApiUrl = `${corsProxy}https://api.telegram.org/bot${botToken}/sendMessage`;
    
    console.log('–û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –≤ Telegram —á–µ—Ä–µ–∑ CORS-–ø—Ä–æ–∫—Å–∏...');
    console.log('–ò—Å–ø–æ–ª—å–∑—É–µ–º ID –≥—Ä—É–ø–ø—ã Ddd:', chatId);
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –∫ API Telegram —á–µ—Ä–µ–∑ –ø—Ä–æ–∫—Å–∏
    const response = await fetch(telegramApiUrl, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'Origin': window.location.origin
      },
      body: JSON.stringify({
        chat_id: chatId,
        text: text,
        parse_mode: 'HTML',
      }),
    });

    const result = await response.json();
    console.log('–û—Ç–≤–µ—Ç –æ—Ç API Telegram:', result);
    
    if (!result.ok) {
      console.error('–û—à–∏–±–∫–∞ –≤ –æ—Ç–≤–µ—Ç–µ API Telegram:', result);
      throw new Error(result.description || '–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram');
    }
    
    return result;
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram:', error);
    throw error;
  }
};

/**
 * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –¥–∞–Ω–Ω—ã–µ —Ñ–æ—Ä–º—ã –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ –≤ Telegram
 * 
 * @param {Object} formData - –î–∞–Ω–Ω—ã–µ —Ñ–æ—Ä–º—ã
 * @param {string} formData.name - –ò–º—è –∫–ª–∏–µ–Ω—Ç–∞
 * @param {string} formData.phone - –¢–µ–ª–µ—Ñ–æ–Ω –∫–ª–∏–µ–Ω—Ç–∞
 * @param {string} formData.area - –ü–ª–æ—â–∞–¥—å –ø–æ–º–µ—â–µ–Ω–∏—è
 * @param {string} formType - –¢–∏–ø —Ñ–æ—Ä–º—ã (–¥–ª—è –≤–∫–ª—é—á–µ–Ω–∏—è –≤ —Å–æ–æ–±—â–µ–Ω–∏–µ)
 * @returns {Promise<object>} - –†–µ–∑—É–ª—å—Ç–∞—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è
 */
export const sendConsultationRequest = async (formData, formType = "–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è") => {
  try {
    // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞ –∏ —á–∞—Ç–∞
    const botToken = '7711196040:AAF3aNxpZEY_B2BOOFj4DT1qWqEqelI77xc';
    
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º ID –≥—Ä—É–ø–ø—ã "Ddd"
    const chatId = '-4779788458';
    
    // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    const text = `üîî –ù–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å: ${formType}!\nüë§ –ò–º—è: ${formData.name}\nüì± –¢–µ–ª–µ—Ñ–æ–Ω: ${formData.phone}\nüìê –ü–ª–æ—â–∞–¥—å: ${formData.area}\nüìÖ –î–∞—Ç–∞: ${new Date().toLocaleString('ru-RU')}`;
    
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º CORS-–ø—Ä–æ–∫—Å–∏ –¥–ª—è –æ–±—Ö–æ–¥–∞ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π
    const corsProxy = 'https://cors-anywhere.herokuapp.com/';
    const telegramApiUrl = `${corsProxy}https://api.telegram.org/bot${botToken}/sendMessage`;
    
    console.log(`–û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ "${formType}" –≤ Telegram —á–µ—Ä–µ–∑ CORS-–ø—Ä–æ–∫—Å–∏...`);
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –∫ API Telegram —á–µ—Ä–µ–∑ –ø—Ä–æ–∫—Å–∏
    const response = await fetch(telegramApiUrl, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'Origin': window.location.origin
      },
      body: JSON.stringify({
        chat_id: chatId,
        text: text,
        parse_mode: 'HTML',
      }),
    });

    const result = await response.json();
    console.log('–û—Ç–≤–µ—Ç –æ—Ç API Telegram:', result);
    
    if (!result.ok) {
      console.error('–û—à–∏–±–∫–∞ –≤ –æ—Ç–≤–µ—Ç–µ API Telegram:', result);
      throw new Error(result.description || '–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram');
    }
    
    return result;
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram:', error);
    throw error;
  }
};